[versions]
desugar_jdk_libs = "2.1.5"
coreKtx = "1.17.0"
appcompat = "1.7.1"
coreSplashscreen = "1.0.1"
kotlinxSerializationJson = "1.9.0"
kotlinxDatetime = "0.7.1"
compose-bom = "2025.08.01"
activityCompose = "1.10.1"
constraintlayoutCompose = "1.1.1"
navigationCompose = "2.9.3"
hiltNavigationCompose = "1.2.0"
hilt = "2.57.1"
androidLifecycle = "2.9.3"
coroutines = "1.10.2"
ktor = "3.2.3"
datastorePreferences = "1.1.7"
firebase-bom = "34.2.0"
inAppBrowser = "1.9.0"
timber = "5.0.1"
lottieCompose = "6.6.7"
coil-bom = "3.3.0"
playReview = "2.0.2"
playAppUpdate = "2.1.0"
truth = "1.4.4"
junit = "4.13.2"
archCoreTesting = "2.2.0"
testCore = "1.7.0"
testExtJunit = "1.3.0"
testRunner = "1.7.0"
testRules = "1.7.0"
espresso = "3.7.0"

# Plugins
agp = "8.12.2"
kotlin = "2.2.10"
ksp = "2.2.10-2.0.2"
googleServices = "4.4.3"
firebaseCrashlytics = "3.0.6"
firebasePerf = "2.0.1"


[libraries]
# Java 8+ API Desugaring Support
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }

core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" } # Kotlin JSON Serialization Library
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" } # Kotlin DateTime

# Jetpack Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" } # Material Design 3
material3-window-size-classes = { group = "androidx.compose.material3", name = "material3-window-size-class" } # Material 3 Window Size Class
material3-adaptive = { group = "androidx.compose.material3.adaptive", name = "adaptive" }
compose-runtime-livedata = { group = "androidx.compose.runtime", name = "runtime-livedata" } # Compose Integration with LiveData
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" } # Android Studio Compose Preview Support
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" } # Android Studio Compose Preview Support
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" } # Compose Integration with Activities
constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" } # Compose Constraint Layout
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" } # Compose Navigation
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" } # Compose Navigation Integration with Hilt

# Architectural Components
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidLifecycle" } # ViewModel
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidLifecycle" } # ViewModel Utilities for Compose
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidLifecycle" } # Lifecycles Only (without ViewModel or LiveData)
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidLifecycle" } # Lifecycle Utilities for Compose

# Dagger - Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

# Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" } # Coroutines Support for Firebase

# Ktor Client Library
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" } # Ktor OkHttp Engine
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Preferences DataStore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics" } # Analytics
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging" } # Cloud Messaging
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics" } # Crashlytics
firebase-perf = { group = "com.google.firebase", name = "firebase-perf" } # Performance Monitor
firebase-appcheck-playintegrity = { group = "com.google.firebase", name = "firebase-appcheck-playintegrity" } # App Check
firebase-appcheck-debug = { group = "com.google.firebase", name = "firebase-appcheck-debug" } # App Check - Debug
# TODO ADD FIREBASE AUTH

# In-App Browser
browser = { module = "androidx.browser:browser", version.ref = "inAppBrowser" }

# Timber Library
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Lottie Library
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }

# Coil Library
coil-bom = { module = "io.coil-kt.coil3:coil-bom", version.ref = "coil-bom" }
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose" }
coil-svg = { group = "io.coil-kt.coil3", name = "coil-svg" }
coil-gif = { group = "io.coil-kt.coil3", name = "coil-gif" }
coil-network-ktor = { group = "io.coil-kt.coil3", name = "coil-network-ktor3" }
coil-network-cache-control = { group = "io.coil-kt.coil3", name = "coil-network-cache-control" }

# Google Play In-App Reviews API
play-review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "playReview" }

# Google Play In-App Updates API
play-app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "playAppUpdate" }

# TODO: APP AD LIBRARIES

# Test Libraries
truth = { module = "com.google.truth:truth", version.ref = "truth" }
junit = { module = "junit:junit", version.ref = "junit" }
test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "testExtJunit" } # JUnit Extension for Android Test
arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "archCoreTesting" } # Test Helpers for Architectural Components
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test-core = { module = "androidx.test:core", version.ref = "testCore" }
test-runner = { module = "androidx.test:runner", version.ref = "testRunner" } # Android JUnit4 Test Runner
test-rules = { module = "androidx.test:rules", version.ref = "testRules" } # Android JUnit Test Rules
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

# UI Test Libraries
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }


[bundles]
essentials = ["core-ktx", "appcompat", "core-splashscreen", "kotlinx-serialization-json", "kotlinx-datetime"]
compose = ["compose-ui", "compose-material3", "material3-window-size-classes", "material3-adaptive", "compose-runtime-livedata", "compose-ui-tooling-preview", "compose-ui-tooling", "activity-compose", "constraintlayout-compose", "navigation-compose", "hilt-navigation-compose"]
architectural-components = ["lifecycle-viewmodel-ktx", "lifecycle-viewmodel-compose", "lifecycle-runtime-ktx", "lifecycle-runtime-compose"]
coroutines = ["kotlinx-coroutines-android", "kotlinx-coroutines-play-services"]
ktor = ["ktor-client-core", "ktor-client-okhttp", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json", "ktor-client-logging"]
firebase = ["firebase-analytics", "firebase-messaging", "firebase-crashlytics", "firebase-perf", "firebase-appcheck-playintegrity", "firebase-appcheck-debug"]
coil = ["coil-compose", "coil-svg", "coil-gif", "coil-network-ktor", "coil-network-cache-control"]
google-play-inapp-apis = ["play-review-ktx", "play-app-update-ktx"]

local-unit-tests = ["truth", "junit", "arch-core-testing", "kotlinx-coroutines-test", "ktor-client-mock"]
instrumentation-tests = ["truth", "junit", "test-ext-junit", "arch-core-testing", "kotlinx-coroutines-test", "test-core", "test-runner", "test-rules", "ktor-client-mock", "hilt-android-testing"]
ui-tests = ["espresso-core", "espresso-intents", "compose-ui-test-junit4"]


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlytics" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerf" }